name: Deploy Multi Sites

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Locate files (debug)
        run: |
          echo "Workspace: $GITHUB_WORKSPACE"
          ls -la
          find . -maxdepth 3 -type f -name "sites.csv" -print

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Netlify CLI
        run: |
          npm i -g netlify-cli
          netlify --version

      - name: Netlify whoami
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          netlify --version
          netlify api getCurrentUser || true

      - name: List Netlify sites (debug)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_TEAM: ${{ secrets.NETLIFY_TEAM }}
        run: |
          netlify sites:list --json || true

      - name: Deploy each site from CSV (auto-create if missing)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_TEAM: ${{ secrets.NETLIFY_TEAM }}
          INDEXNOW_KEY: ${{ secrets.INDEXNOW_KEY }}
          SITES_CSV: ${{ vars.SITES_CSV }}
          PUBLIC_ROOT: ${{ vars.PUBLIC_ROOT }}
        run: |
          set -euo pipefail

          CSV_FILE="${SITES_CSV:-PT/sites.csv}"
          ROOT="${PUBLIC_ROOT:-.}"
          CSV_PATH="$GITHUB_WORKSPACE/$CSV_FILE"

          echo "Using CSV: $CSV_PATH"
          test -f "$CSV_PATH" || { echo "CSV not found"; exit 1; }

          # удобная функция: есть ли сайт?
          has_site () {
            local name="$1"
            netlify sites:list --json \
              | node -e "process.stdin.on('data',d=>{}); process.stdin.on('end',()=>{const a=JSON.parse(require('fs').readFileSync(0,'utf8'));console.log(a.some(s=>s.name==='${name}'))})"
          }

          while IFS=',' read -r folder site_name domain sitemap; do
            # skip header/comments/empty
            [[ -z "${folder:-}" ]] && continue
            [[ "$folder" == "folder" ]] && continue
            [[ "$folder" =~ ^# ]] && continue

            SRC="${ROOT}/${folder}"
            echo "=== Site: '${site_name}'  domain='${domain}'  src='${SRC}'"

            if [[ ! -d "$SRC" ]]; then
              echo "WARN: dir not found: $SRC — пропускаю"
              continue
            fi

            # 1) если сайта нет — создаём
            if [[ "$(has_site "$site_name")" != "true" ]]; then
              echo "Site '${site_name}' not found — creating..."
              if [[ -n "${NETLIFY_TEAM:-}" ]]; then
                netlify sites:create --name "$site_name" --team "$NETLIFY_TEAM"
              else
                netlify sites:create --name "$site_name"
              fi
            else
              echo "Site '${site_name}' exists."
            fi

            # 2) деплой
            netlify deploy \
              --auth="$NETLIFY_AUTH_TOKEN" \
              --dir="$SRC" \
              --site="$site_name" \
              --prod

            # 3) IndexNow пинг
            if [[ -n "${domain:-}" ]]; then
              URL="https://${domain}/${sitemap:-}"
              [[ -z "${sitemap:-}" ]] && URL="https://${domain}/"
              echo "Pinging IndexNow → $URL"
              curl -s -H 'Content-Type: application/json' \
                -d "{\"host\":\"${domain}\",
                     \"key\":\"${INDEXNOW_KEY}\",
                     \"keyLocation\":\"https://${domain}/${INDEXNOW_KEY}.txt\",
                     \"urlList\":[\"${URL}\"]}" \
                https://api.indexnow.org/submit || true
            fi

            echo "=== Done: $site_name"
          done < "$CSV_PATH"

